{"ast":null,"code":"var _jsxFileName = \"/Users/benmiriello/Development/code/Local_Experts_App/Front_End_Local_Experts/src/components/UserProfile.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Card, Grid, Segment, Divider, Header } from 'semantic-ui-react';\nimport UserPageExperienceModal from './UserPageExperienceModal';\nimport { Modal, Button, Image } from 'semantic-ui-react';\nimport EventList from './EventList';\nimport MapInsert from './MapInsert';\nexport class UserProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userLogged: {}\n    };\n\n    this.showFavorites = () => {\n      console.log('user faves', this.state.userLogged.favorite_experiences);\n\n      if (this.state.userLogged.favorite_experiences) {\n        return this.state.userLogged.favorite_experiences.map(experience => React.createElement(Card, {\n          className: \"experience-card\",\n          image: experience.image,\n          header: experience.name,\n          meta: experience.category,\n          description: experience.description.substring(0, 70) + \"...\",\n          extra: React.createElement(UserPageExperienceModal, {\n            experience: experience,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }));\n      } else {\n        return \"Either you aren't logged in or you haven't favorited any experiences yet...\";\n      }\n    };\n\n    this.myExperiences = () => {\n      console.log('user booked exps ', this.state.userLogged.my_experiences);\n\n      if (this.state.userLogged.my_experiences) {\n        return this.state.userLogged.my_experiences.map(evt_exp => React.createElement(Modal, {\n          style: {\n            height: '60%',\n            width: '80%'\n          },\n          trigger: React.createElement(Button, {\n            color: \"orange\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, \"View Dates\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(Modal.Header, {\n          className: \"event-modal-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, evt_exp.experience.name), React.createElement(Modal.Content, {\n          image: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(Image, {\n          wrapped: true,\n          size: \"large\",\n          src: evt_exp.experience.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), React.createElement(Modal.Description, {\n          class: \"event-modal-description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Led by: \", evt_exp.experience.host_name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Location: \", evt_exp.experience.location_name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"From: \", evt_exp.event.start_at.slice(11, 16), \" To: \", evt_exp.event.end_at.slice(11, 16)), React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Available on These Dates:\"), React.createElement(EventList, {\n          events: evt_exp.experience.events,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })), React.createElement(MapInsert, {\n          experience: evt_exp.experience,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }))) // <Card\n        //     className=\"experience-card\"\n        //     image={evt_exp.experience.image}\n        //     header={evt_exp.experience.name}\n        //     meta={evt_exp.experience.category}\n        //     description={evt_exp.experience.description.substring(0,70) + \"...\"}\n        //     extra={<UserPageExperienceModal experience={evt_exp.experience} />}\n        // />\n        );\n      } else {\n        return \"Are You Experienced?\";\n      }\n    };\n  }\n\n  // use user id in localstorage to fetch that user's info and populate their profile\n  componentDidMount() {\n    // console.log(localStorage)\n    axios.get(`http://localhost:4001/api/v1/users/${localStorage.id}`).then(res => {\n      // const userCurrent = res.data\n      // console.log('response in userpage fetch ', res.data)\n      this.setState({\n        userLogged: res.data\n      }, () => console.log('user logged ', this.state.userLogged));\n    });\n  }\n\n  render() {\n    return React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 2,\n      relaxed: \"very\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"My Favorites\"), React.createElement(\"div\", {\n      className: \"cards-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.showFavorites())), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"My Experiences\"), React.createElement(\"div\", {\n      className: \"cards-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.myExperiences()))), React.createElement(Divider, {\n      vertical: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default UserProfile; // user logs in\n// redirects here\n// also add statement to change login to log out\n//","map":{"version":3,"sources":["/Users/benmiriello/Development/code/Local_Experts_App/Front_End_Local_Experts/src/components/UserProfile.js"],"names":["React","Component","axios","Card","Grid","Segment","Divider","Header","UserPageExperienceModal","Modal","Button","Image","EventList","MapInsert","UserProfile","state","userLogged","showFavorites","console","log","favorite_experiences","map","experience","image","name","category","description","substring","myExperiences","my_experiences","evt_exp","height","width","host_name","location_name","event","start_at","slice","end_at","events","componentDidMount","get","localStorage","id","then","res","setState","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport {Card, Grid, Segment, Divider, Header} from 'semantic-ui-react'\nimport UserPageExperienceModal from './UserPageExperienceModal'\nimport {Modal, Button, Image} from 'semantic-ui-react'\nimport EventList from './EventList'\nimport MapInsert from './MapInsert'\n\nexport class UserProfile extends Component {\n\n    state = {\n        userLogged: {}\n    }\n\n    // use user id in localstorage to fetch that user's info and populate their profile\n\n    componentDidMount(){\n        // console.log(localStorage)\n        axios.get(`http://localhost:4001/api/v1/users/${localStorage.id}`)\n        .then(res => {\n            // const userCurrent = res.data\n            // console.log('response in userpage fetch ', res.data)\n            this.setState({\n                userLogged: res.data\n            }\n            , () => console.log('user logged ', this.state.userLogged)\n            )\n        })\n    }\n\n    showFavorites = () => {\n\n        console.log('user faves', this.state.userLogged.favorite_experiences)\n        \n        if (this.state.userLogged.favorite_experiences) {\n            return(\n                this.state.userLogged.favorite_experiences.map(experience => \n                    <Card\n                        className=\"experience-card\"\n                        image={experience.image}\n                        header={experience.name}\n                        meta={experience.category}\n                        description={experience.description.substring(0,70) + \"...\"}\n                        extra={<UserPageExperienceModal experience={experience} />}\n                    />\n                )\n            )\n        } else {\n            return \"Either you aren't logged in or you haven't favorited any experiences yet...\"\n        }\n    }\n\n    myExperiences = () => {\n        console.log('user booked exps ', this.state.userLogged.my_experiences)\n        if (this.state.userLogged.my_experiences) {\n            return(\n                this.state.userLogged.my_experiences.map(evt_exp => \n                    <Modal style={{ height: '60%', width: '80%' }} trigger={<Button color='orange'>View Dates</Button>}>\n                        <Modal.Header className=\"event-modal-header\">{evt_exp.experience.name}</Modal.Header>\n                        <Modal.Content image>\n                        <Image wrapped size='large' src={evt_exp.experience.image} />\n                        <Modal.Description class=\"event-modal-description\">\n                            <h4>Led by: {evt_exp.experience.host_name}</h4>\n                            <p>Location: {evt_exp.experience.location_name}</p>\n                            <p>From: {evt_exp.event.start_at.slice(11, 16)} To: {evt_exp.event.end_at.slice(11, 16)}</p>\n                            <h4>Available on These Dates:</h4>\n                            <EventList events={evt_exp.experience.events}/>\n                        </Modal.Description>\n                        <MapInsert experience={evt_exp.experience}/>\n                        </Modal.Content>\n                    </Modal>\n                    // <Card\n                    //     className=\"experience-card\"\n                    //     image={evt_exp.experience.image}\n                    //     header={evt_exp.experience.name}\n                    //     meta={evt_exp.experience.category}\n                    //     description={evt_exp.experience.description.substring(0,70) + \"...\"}\n                    //     extra={<UserPageExperienceModal experience={evt_exp.experience} />}\n                    // />\n                ) \n            )\n        } else {\n            return \"Are You Experienced?\"\n        }\n    }\n\n    render() {\n        return (\n            <Segment>\n                <Grid columns={2} relaxed='very'>\n                    <Grid.Column>\n                        <Header>My Favorites</Header>\n                        <div className=\"cards-container\">\n                            {this.showFavorites()}\n                        </div>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Header>My Experiences</Header>\n                        <div className=\"cards-container\">\n                            {this.myExperiences()}\n                        </div>\n                    </Grid.Column>\n                </Grid>\n        \n                <Divider vertical></Divider>\n            </Segment>\n        )\n    }\n}\n\nexport default UserProfile\n\n\n\n// user logs in\n// redirects here\n// also add statement to change login to log out\n//\n"]},"metadata":{},"sourceType":"module"}