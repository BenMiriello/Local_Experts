{"ast":null,"code":"var _jsxFileName = \"/Users/benmiriello/Development/code/Local_Experts_App/Front_End_Local_Experts/src/components/UserPageExperienceModal.js\";\nimport React from 'react';\nimport { Modal, Button, Image } from 'semantic-ui-react';\nimport EventList from './EventList';\nimport MapInsert from './MapInsert';\n\nclass FavoritesExperienceModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:4001/api/v1/experiences/${this.props.experience.id}`).then(r => r.json()).then(exp => {\n      this.setState({\n        events: exp.events\n      });\n    });\n  }\n\n  render() {\n    console.log('experience modal props', this.props);\n\n    if (this.state.events.length >= 1) {\n      return React.createElement(Modal, {\n        style: {\n          height: '60%',\n          width: '80%'\n        },\n        trigger: React.createElement(Button, {\n          color: \"orange\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"View Dates\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        className: \"event-modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.experience.name), React.createElement(Modal.Content, {\n        image: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Image, {\n        wrapped: true,\n        size: \"large\",\n        src: this.props.experience.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(Modal.Description, {\n        class: \"event-modal-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Led by: \", this.props.experience.host_name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Location: \", this.props.experience.location_name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"From: \", this.state.events[0].start_at.slice(11, 16), \" To: \", this.state.events[0].end_at.slice(11, 16)), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Available on These Dates:\"), React.createElement(EventList, {\n        events: this.props.experience.events,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(MapInsert, {\n        experience: this.props.experience,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })));\n    } else {\n      return \"No Events...\";\n    }\n  }\n\n}\n\nexport default FavoritesExperienceModal;","map":{"version":3,"sources":["/Users/benmiriello/Development/code/Local_Experts_App/Front_End_Local_Experts/src/components/UserPageExperienceModal.js"],"names":["React","Modal","Button","Image","EventList","MapInsert","FavoritesExperienceModal","Component","state","events","componentDidMount","fetch","props","experience","id","then","r","json","exp","setState","render","console","log","length","height","width","name","image","host_name","location_name","start_at","slice","end_at"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Modal, Button, Image} from 'semantic-ui-react'\nimport EventList from './EventList'\nimport MapInsert from './MapInsert'\n\nclass FavoritesExperienceModal extends React.Component{\n\n    state={\n        events: []\n    }\n\n    componentDidMount(){\n        fetch(`http://localhost:4001/api/v1/experiences/${this.props.experience.id}`)\n        .then(r => r.json())\n        .then(exp => {\n            this.setState({\n                events: exp.events\n            })\n        })\n    }\n\n    render(){\n        console.log('experience modal props', this.props)\n        if (this.state.events.length >= 1) {\n            return(\n                <Modal style={{ height: '60%', width: '80%' }} trigger={<Button color='orange'>View Dates</Button>}>\n                    <Modal.Header className=\"event-modal-header\">{this.props.experience.name}</Modal.Header>\n                    <Modal.Content image>\n                    <Image wrapped size='large' src={this.props.experience.image} />\n                    <Modal.Description class=\"event-modal-description\">\n                        <h4>Led by: {this.props.experience.host_name}</h4>\n                        <p>Location: {this.props.experience.location_name}</p>\n                        <p>From: {this.state.events[0].start_at.slice(11, 16)} To: {this.state.events[0].end_at.slice(11, 16)}</p>\n                        <h4>Available on These Dates:</h4>\n                        <EventList events={this.props.experience.events}/>\n                    </Modal.Description>\n                    <MapInsert experience={this.props.experience}/>\n                    </Modal.Content>\n                </Modal>\n            )\n        } else {\n            return(\n                \"No Events...\"\n            )\n        }\n    }\n}\n\nexport default FavoritesExperienceModal\n\n"]},"metadata":{},"sourceType":"module"}